32位元

32位元也是一种称呼电脑世代的名词，在于以32位元处理器为准则的时间点。

32位元可以储存的整数范围是0到4294967295，或使用二的补数是-2147483648到2147483647。因此，32位元记忆体位址可以直接存取4GiB以位元组定址的记忆体。

外部的记忆体和资料汇流排通常都比32位元还宽，但是两者在处理器内部储存或是操作时都当作32位元的数量。举例来说，Pentium Pro处理器是32位元机器，但是外部的位址汇流排是36位元宽，外部的资料汇流排是64位元宽。32位元应用程式是指那些在 32位元平面位址空间（平面记忆体模式）的软体。

32位元应用程式这个名词的出现，是由于原先为Intel 8088和Intel 80286微处理器所撰写的DOS和微软Windows。这些是16位元的区段位址空间定址的微处理器。拥有大于64KB 的程式和资料因此必须要经常地在不同区段间切换。相对于其他的机器运作，这些操作是相当的耗时，因此应用程式的效能可能变得较差。再者，使用到区段的程式设计比起平面记忆体空间的方式，会导致某些程式语言上的复杂性，像是C语言和C++语言的“记忆体模式”。
在 IBM 相容系统上，从16位元软体转移到32位元软体，随著 Intel 80386 微处理器的推出而变成可能。这个微处理器和他的后代支援16位元和32位元节区的区段记忆体空间（更精确地说，是有16或32位元位址偏移量的区段）。如果全部的32位元区段的基底位址都设定为0，那么区段暂存器就不用明确地使用，这些区段可以被遗忘掉，处理器就像是拥有一个简单的线性32位元位址空间。然而为了相容性的因素，大多数软体仍以16位元模式撰写。

像是Windows或是OS/2作业系统提供了也让16位元（区段）程式可以像32位元程式执行的可能性。前者16位元的相容性之所以存在是因为要提供向前相容性，而后者32位元是用来作为新的软体发者使用。

iOS 11起停止支持32位应用程序。

