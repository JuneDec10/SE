克隆 (编程学)

"本条目是描述计算机编程学中的克隆，有关克隆的其它用法，请参见克隆 (消歧义)。"

在计算机科学中，“克隆”指对一个对象制作一个完全相同的副本，其常常在原型程式设计中的编程范型或者面向对象程序设计（OOP）中用到。

在大多数编程语言中（但除了：Ruby等一些语言），例如codice_1、codice_2、codice_3、codice_4等一些原始型别仅仅将它们的值存储于计算机内存中的某处（通常为调用栈中）。给它进行一次简单赋值，你可以将变量的内容复制到另外一个变量中：

在Java或C++中进行基本类型的复制：
许多OOP编程语言（包括Java、D语言、ECMAScript和C♯）利用对象引用。对象引用与其他语言中的指针类似，其使得对象可以被指针所传递而完整的对象不被复制。

以下是在Java语言中的范例，当使用简单赋值“拷贝”一个对象时：
这段代码并没有复制对象，变量“original”与“copy”实际上指向相同的对象。在C++中，以下是相同效果代码：

这段代码指明复制对象的是一个“指针”，而非对象本身。

制造与对象相同的一个副本而非仅仅制造它的引用的过程被称为克隆。在大多数编程语言中，编程语言和库可以便利一些克隆的过程。在Java语言中，codice_5类包含了，此方法仅仅复制对象并返回一个指向被复制对象的引用。由于此方法位于codice_5类中，程序员得以在所有定义于Java的类中使用克隆方法（虽然为了正常使用，其需要根据其应用于不同的层级进行改写）。 

在Java语言中进行对象的克隆：
一般而言，C++中的对象像基本类型一样运行，所以复制一个C++对象可以使用“codice_7”（分配）赋值运算符。C++语言中所有的类中存在一个默认的赋值运算符，但其效果可能被运算符重载所影响。使用此方法时可能存在危险（参见）。防止对象切片的方法的方法之一是使用与Java所有的类中的codice_8方法来实现，并使用指针（请注意C++中不存在自带的codice_8方法）。

C++中对象克隆的示例：
C++中使用指针进行对象克隆的示例（防止对象切片请参见）：
