普林姆算法

普里姆算法（算法），图论中的一种算法，可在加权连通图里搜索最小生成树。意即由此算法搜索到的边子集所构成的树中，不但包括了连通图里的所有顶点，且其所有边的权值之和亦为最小。该算法于1930年由捷克数学家发现；并在1957年由美国计算机科学家独立发现；1959年，艾兹格·迪科斯彻再次发现了该算法。因此，在某些场合，普里姆算法又被称为DJP算法、亚尔尼克算法或普里姆－亚尔尼克算法。

从单一顶点开始，普里姆算法按照以下步骤逐步扩大树中所含顶点的数目，直到遍及连通图的所有顶点。


通过邻接矩阵图表示的简易实现中，找到所有最小权边共需formula_1的运行时间。使用简单的二叉堆与邻接表来表示的话，普里姆算法的运行时间则可缩减为formula_2，其中formula_3为连通图的边集大小，formula_4为点集大小。如果使用较为复杂的斐波那契堆，则可将运行时间进一步缩短为formula_5，这在连通图足够密集时（当formula_3满足formula_7条件时），可较显著地提高运行速度。

已知图G的边数量为numEdge, 顶点数量为numVert, prim生成的树为T, 最小生成树（MST）为T

则有，cost(T)<=cost(T)

设：
T 的 numVert-1 条边按照权重由小到大排列依次为：e, e, e, ..., e

T 的 numVert-1 条边按照权重由小到大排列依次为：e, e, e, ..., e

其中n=numVert-1

两棵树的边从小到大权重比较，设第一个属于 T 但不属于 T 的边为 e, 连接该边的两个顶点为 (v, v)

同时存在第一个属于 T 但不属于 T 的边为 e, 连接该边的两个顶点为 (v, v)。

两个边的起点相同。由Prim算法性质可知，w(e) >= w(e)

此时，在 T 中删除 e ，添加 e，边的数量和顶点数量均不变，且不存在环，因此得到新的生成树T,且cost(T)>=cost(T)

又因为 T 是MST 所以 cost(T)=cost(T)。

以此类推，cost(T)=cost(T)

T是最小生成树， 得证.

部分主程序段：

普林演算法与迪科斯彻演算法的策略相似。
