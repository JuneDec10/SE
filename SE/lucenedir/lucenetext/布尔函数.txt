布尔函数

在数学中，布尔函数（Boolean function）描述如何基于对布尔输入的某种逻辑计算确定布尔值输出。它们在复杂性理论的问题和数字计算机的芯片设计中扮演基础角色。布尔函数的性质在密码学中扮演关键角色，特别是在对称密钥算法的设计中（参见S-box）。

在数学中，有限布尔函数是如下形式的函数f : B → B，这里的B = {0, 1}是布尔域，而"k"是非负整数。在"k" = 0的情况下，函数简单的是B的一个恒定元素。

更一般的说，形如"f" : "X" → B函数，这里的"X"是任意集合，是布尔值函数。如果"X" = M = {1, 2, 3, …}，则"f"是“二进制序列”，就是说0和1的无限序列。如果"X" = ["k"] = {1, 2, 3, …, "k"}，则"f"是长度为"k"的“二进制序列”

有formula_1个这种函数。

布尔函数可以唯一的写为积（AND）之和（XOR）。这叫做代数范式（ANF），也叫做Zhegalkin多项式。

这里的formula_2。
序列formula_3的值因此还唯一的表示一个布尔函数。

布尔函数的代数次数被定义为出现在乘积项中的formula_4的最高次数。所以formula_5有次数1（线性），而formula_6有次数3（立方）。
对于每个函数formula_7都有一个唯一的ANF。只有四个函数有一个参数: formula_8 ，formula_9 ，formula_10 ，formula_11 ；它们都可以在ANF中给出。要表示有多个参数的函数，可以使用如下等式：
这里的formula_13 并且 formula_14 。

实际上，
因为formula_21和formula_22二者都有比formula_7少的参数，可以得出递归的使用这个过程将完成于只有一个变量的函数。
例如，让我们构造一个formula_24（逻辑或）的ANF：


