置标语言

置标语言（也称-{zh-hans:置标语言; zh-hant:置标语言}-、-{zh-hans:标记语言; zh-hant:标记语言}-、-{zh-hans:标志语言; zh-hant:标志语言}-、-{zh-hans:标识语言; zh-hant:标识语言}-、markup language）是一种将文本（）以及文本相关的其他信息结合起来，展现出关于文档结构和数据处理细节的计算机文字编码。与文本相关的其他信息（包括例如文本的结构和表示信息等）与原来的文本结合在一起，但是使用标记（markup）进行标识。当今广泛使用的置标语言是超文本置标语言（，）和可扩展置标语言（，）。置标语言广泛应用于网页和网络应用程序。标记最早用于出版业，是作者、编辑以及出版商之间用于描述出版作品的排版格式所使用的。

标志语言通常可以分为三类：表示性的、过程性的以及描述性的。

表示性的标志语言（Presentational markup）是在编码过程中，标记文档的结构信息。例如，在文本文件中，文件的标题可能需要用特定的格式表示（居中，放大等），这样我们就需要标记文件的标题。字处理以及桌面出版产品有时候能够自动推断出这类的结构信息，但是绝大多数的，像Wiki这样的纯文本编辑器还不能解决这个问题。

过程性标志语言（Procedural markup）一般都专门于文字的表达，但通常对于文本编辑者可见，并且能够被软件依其出现顺序依次解读。为了格式化一个标题，在标题文本之前，会紧接着插入一系列的格式标识符，以指示计算机转换到居中的显示模式，同时加大及加粗字体。在标题文本之后，会紧接缀上格式中止标识；对于更高级的系统宏命令或者堆栈模式会让这一过程的实现方式更加丰富。大多数情况下，过程性标志能力包含有一个Turing-complete编程语言。过程性标志语言的范例有：nroff, troff, TeX, Lout以及PostScript。过程性标志语言被广泛应用在专业出版领域，专业的出版商会根据要求使用不同的指标语言以达到出版要求。

描述性标识（Descriptive Markup）也称通用标识，所描述的是文件的内容或结构，而不是文件的显示外观或样式，制定SGML的基本思想就是把文档的内容与样式分开，XML、SGML都是典型的通用标识语言。

“标识（markup）”这个词来源自传统出版业的“标记”一个手稿，也就是在原稿的边缘加注一些符号来指示打印上的要求。长久以来，这个工作都是由专门的人（"markup men"）以及校对人来进行，对原稿标志出使用什么样的字体，字型以及字号，然后再将原稿交给其它人进行手工的排版工作。

TeX是一个由美国电脑教授高德纳（Donald E. Knuth）编写的功能强大的排版软件。它在学术界十分流行，特别是数学、物理学和计算机科学界。TeX被普遍认为是一个很好的排版工具，特别是在处理复杂的数学公式时。利用诸如是LaTeX等终端软件，TeX就能够排版出精美的文本。

SGML是一种专门的标记语言，被用作编写《牛津英语词典》的电子版本。由于SGML的复杂，导致难以普及。

超文件标识语言（英文：HyperText Markup Language，简称为HTML）是为网页创建和其它可在网页浏览器中看到的信息设计的一种标志语言。

可扩展标识语言（eXtensible Markup Language，简称XML），又称可扩展标记语言，是一种标志语言。标志指计算机所能理解的信息符号，通过此种标记，计算机之间可以处理包含各种信息的文章等。

可延伸超文本标识语言（eXtensible HyperText Markup Language，XHTML），是一种标志语言，表现方式与超文本标志语言（HTML）类似，不过语法上更加严格。

还有其它一些基于XML的应用，比如RDF、XForms、DocBook、SOAP以及Web Ontology Language（OWL）。具体可以参见XML标记语言列表.




