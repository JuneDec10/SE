X86记忆体区段

x86架构中，记忆体区段（）是在不改变16位元段选择子时，使用单个索引暂存器（保存了段内地址偏移值）所能够定址的的记忆体范围部份。也指在英特尔x86指令集体系结构下记忆体区段的实现方式。

从8086开始到随后的各款x86架构CPU，无论是实模式还是保护模式，内存寻址时都使用16位段寄存器（segment register）。段寄存器默认使用情况为：
这些段寄存器除了有16位的可见部分，还有不可见的隐藏部分，称为描述符缓存“descriptor cache”或隐藏寄存器“shadow register”。当一个段选择符（segment selector）装入段寄存器的可见部分，处理器同时也把该段描述符的其它数据装入到段寄存器的隐藏部分，这包括段开始的基地址、段长度、访问控制信息等。这些信息缓存到段寄存器中，避免了处理器在转址（translate address）时花费额外的总线周期从段选择符表中读入数据。处理器指令中可以明示使用哪些段寄存器，这将替换掉默认使用的段寄存器。

1978年的Intel 8086开始引入了内存分段。这使得16位CPU可以访问超过64 KB (65,536字节)的内存，实际上8086 CPU到内存的地址总线是20位，即可访问2=1MB内存。在16位元模式，要让应用程式使用多个记忆体区段（为了存取比任一64K区段还要大的记忆体）是相当复杂。这个问题的根源在于没有适当的适合做整个记忆体范围的平面定址的位址算术指令。平面定址方式也可以乘法指令来完成，但这会导致较慢的程式执行速度。 

1982年面世的80286处理器的真实模式与保护模式，以及80386及其后的处理器的虚拟86模式，一个区段的大小是64 KiB（使用16位元索引暂存器）。在Intelx86的真实模式下的区段架构的内存空间会有所重叠，这是一种不好的设计。 80286的保护模式下，16位的段寄存器中的13位（称作段选择符segment selector）是描述符表的条目（descriptor table entry）的索引；该条目包含了24位的段开始地址以及16位的段长度；段开始地址与段内偏移地址相加即为内存物理地址。16位段寄存器中的剩余3位分别是全局/局部描述符表指示位、请求特权级（request privilege level）。

1985年面世的80386及其后续处理器的32位元保护模式下，一个区段长度上限是2个粒度单位，粒度可以是1字节或4K字节，因此分段长度上限可以是4 GB，这与索引暂存器是32位元相配合。 

随着32位元作业系统的推出，以及更舒适的32位元平面记忆体模式，到1990年末期几乎淘汰了使用区段定址。然而，使用32位平面记忆体模式产生的最多只能访问4 GB地址空间的限制并没有远离日常的使用。区段允许作业系统对每个行程虚拟定址空间的限制，最大可利用64 GB的系统记忆体，但这种最终回归到区段的尴尬，经常被引述为朝着64位元处理器发展的动机。 

2003年问世的x86-64架构下，强制实现了平面内存模型，但保留了使用段寄存器FS或GS的64位下的分段寻址。

真实模式与虚拟86模式下，一个段总是长64,536字节（16位段内偏移地址）。在段寄存器内的16位段选择符（segment selector）被解释为20位线性地址空间的高16位，称为段地址；其余的低4位全为0。段地址与16位段内偏移地址相加产生线性地址，同时也是这种内存模式下的物理地址。 任何程序都可以访问全部内存空间。没有对内存的访问权限保护。
Intel 80286处理器仍然使用16位段寄存器与16位的段内偏移地址，但保护模式下支持访问2（16M）字节的内存。16位段寄存器内不再是段地址，16位段寄存器的高13位被称作段选择符（segment selector），其值是到表的索引值。段描述符中包含了24位的段开始的基地址，20位的段长度。段开始地址与段内偏移地址相加即为内存物理地址。段的长度上限为2=1M字节。
Intel 80286处理器继续使用286的分段保护模式，但段描述符中包含了32位的段开始的基地址。段内偏移地址也是32位。在分段转址与物理地址之间又增加了一层分页（paging）转址。分段寻址是不能关闭的。分页可以使能或关闭（enabled or disabled），如果关闭就与286保护模式一样。如果使用分页机制，则由段开始的基地址与段内偏移地址相加得到的是线性地址（虚地址），线性地址还需要分页转址才得到内存物理地址。

386的段描述符中的段长度为20位，段长度的粒度可设为1字节或2字节。因此段长度可以为1字节-1M字节，或者为1×4K字节-1M×4K字节。段描述符的数据结构为；

386处理器增加了两个段寄存器FS、GS，这两个寄存器并无硬件绑定的用途。Windows操作系统在地址FS:0中保存了当前线程信息块。Linux中GS指向了线程局部存储。

通过清除控制寄存器CR0中的最低位，可由386保护模式转为实模式。

Linux操作系统在386保护模式下把段基址设为0，段长度设为4GiB，从而模拟了平面内存模型。
在x86-64体系结构64位的long mode，段寄存器CS, SS, DS, ES强制为0。段长度强制为2。形式上还有内存分段，但实际上所有内存都在唯一的一个分段中。段寄存器FS、GS可以有非0值，被操作系统用于其它用途。即硬件支持如“FS:[RAX]”这样的寄存器间接寻址。
