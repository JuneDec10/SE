德卡斯特里奥算法

数学子领域数值分析中的德卡斯特里奥算法（），以发明者保尔·德·卡斯特里奥命名，是计算伯恩斯坦形式的多项式或贝兹曲线的递归方法。

虽然对于大部分的体系结构，该算法和直接方法相比较慢，但它在数值上更为稳定。

贝兹曲线"B"（角度为"n"，控制点formula_1）可用以下方式运用德卡斯特里奥算法

其中"b"为

曲线在"t"点上可以用递回关系式运算

然后，formula_6在formula_7点上的计算可以此算法的formula_8步计算。formula_9的结果为：

再者，贝兹曲线formula_6可在formula_7分成带有各种控制点的两段曲线：

进行手算时把系数写成三角形形式很有用。

当选择一点"t"来计算波恩斯坦多项式时，我们可以用三角形形式的两个对角线来构造多项式的分段表示。

把它变成

以及

我们要计算2次波恩斯坦多项式，其伯恩斯坦系数为
在"t"点计算。

我们有下式开始递归

递归的第二次重复结束于

这就是我们所预料的n阶伯恩斯坦多项式。

在计算带"n"+1个控制点P的三维空间中的"n"次贝塞尔曲线 (Bézier curve) 时

其中

我们把Bézier曲线分成三个分立的方程

然后我们用de Casteljau算法分别计算。

这是一个递归的画出一条从点"P1"到"P4"，弯向"P2"和"P3"的曲线的伪代码例子。"级数"参数是递归的次数。该过程用增加了的"级数"参数来递归的调用它自己。当"级别"达到"最大级别"这个全局变量时，在"P1"和"P4"之间就画上直线。函数"中点（midpoint）"去两个点，并返回这两点间的线段的中点。

（该代码用到"Python图像库"）

