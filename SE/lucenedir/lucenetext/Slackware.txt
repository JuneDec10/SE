Slackware

Slackware是Slackware Linux, Inc的制作的Linux发行版本。Slackware走了一条与其他的发行版本（Red Hat、Debian、Gentoo、SuSE、Mandriva、Ubuntu等）不同的道路，它力图成为“UNIX风格”的Linux发行版本。它的方针是只吸收稳定版本的应用程序，并且缺少其他Linux版本中那些为发行版本定制的配置工具。

第一个Slackware的版本1.00在1993年7月16日由创立者和开发领导者发布，。 它是基于SLS Linux并以3½" 软盘为镜像在匿名FTP上发行。Slackware是现存最古老的Linux发行版本，在2003年度过了它的十周年纪念。

“Slackware”这个名字借用自《大教堂和市集》（The Cathedral and the Bazaar）中的术语“Slack”。

在早期的发布版本中，发行版本带有三个用户帐号："satan", "gonzo"和"snake"。它们是作为示例被提供，但是后来的版本中去除了这些帐号，因为它们有潜在的安全漏洞。

在1999年，Slackware的发布版本号从4一下子跨越到了7。Patrick Volkerding作出解释：这是出于市场推广的考虑，为了告诉人们Slackware和别的Linux发行版本一样“新”（up-to-date），当时许多其他发行版本的版本号为6。

在2004年，Patrick Volkerding得了严重的疾病，Slackware一下前途未卜。在他痊愈后很快恢复了Slackware的开发。

在2005年，GNOME桌面环境被从待发布的版本中删除，移交给了社群进行支持。GNOME的删除被Linux社群中的一些人认为是一个警讯，因为GNOME在各种Linux发行版本中都可以找到，一些由社群建立的支援计划也因此诞生。

贯穿Slackware的历史，出现一些在Slackware基础上制作的发行版本和LiveCD。一些流行的发行版本就起源于Slackware，包括SUSE，College Linux和Slax。

Slackware主要为x86 PC开发。然而曾经存在一些官方的移植，像针对DEC Alpha和SPARC架构的。从2005年起，开始出现针对System/390架构的官方移植。同时也存在一些非官方的移植，ARM，DEC Alpha，SPARC和PowerPC。

Slackware针对x86的最新稳定发布版本是14.2（2016年7月1日），其中包括了4.4.14版本内核，以及KDE SC 4.14.32（内有Amarok2.8.0媒体播放器）, XFCE 4.12.1，最新版本的Firefox和Thunderbird，glibc-2.23, gcc-5.3.0以及其它常用软件。

Slackware的测试／开发版本称为 '-current'，这是为了可以使用更多超前的配置。

Slackware 13.0，官方首次提供64位的版本下载。

KISS，代表“保持简洁，傻瓜”（"Keep it Simple, Stupid"），是一个可以解释很多Slackware中设计选择的概念。在这个文本中，“简洁”（"simple"）指系统设计的观点，而不是指易用性。这也是为什么这个系统中只有极少数使用GUI的配置工具。GUI工具（按照这理论所说）过于复杂，比起命令行工具来会引入更多的问题。这种原则导致的最终结果是Slackware以不友好的代价换取了系统非常快速、稳定和安全的特性。Slackware并不包含类似于service、chkconfig一类的用于代替用户修改系统配置的多余软件，它将系统“真实”的一面毫不隐藏的呈现给使用者，让人们看到“真正的”Linux。批评的观点一般集中于它让很多事做起来太费时而且难以学习。支持者回应到在这种灵活和透明的系统中操作得到的经验比起在那些遮掩内部细节的系统中要多得多。

Slackware使用BSD风格的初始化脚本，其他的Linux发行版本大多使用System V风格的初始化脚本。基本上System V风格的每个运行级都是存放初始化脚本的子目录，而BSD风格仅为每个运行级提供一个脚本。BSD风格的拥护者认为这样更佳，因为系统可以更容易找到，读取，编辑，和维护脚本。System V的拥护者认为System V的结构强大和灵活。

System V初始化兼容在7.0版本之后被引入了Slackware中。

Slackware的软件包管理系统很独特。它的软体套件管理系统和别的发行版本一样可以很容易的安装、升级、移除包。但是它不会试着去追踪或者管理涉及哪些依赖关系（也就是保证系统拥有所有的安装包内的程序需要的系统库）。如果所需要的先决条件不能满足，在程序执行之前不会有提醒和指示。

包都经过gzip压缩和tarball打包，但文件扩展名是.tgz，而不是.tar.gz。他们的结构是这样的：当在根目录下解压缩和释放，其中的文件会放置于它们的安装位置。因此可以不使用Slackware的包工具来安装包，而仅仅使用tar和gzip命令，如果包中有doinst.sh脚本，一定要运行它。

相对的，Red Hat的RPM是CPIO档案，Debian的.deb文件是ar档案。他们都包括一些依赖关系的信息，包管理器工具可以使用这些信息来寻找和安装先决条件。他们在先决条件满足前是不会安装新包的（虽然可以强制进行）。

关于追踪或者无视依赖关系孰优孰劣的争论并不很热闹，这多少让人想起了持续甚久的"vi对Emacs"的“宗教战争”。Slackware解决问题的方法被技巧熟练的用户群很好的接受了。

由于Slackware本身不引进解决依赖关系并自动下载安装的工具，一些业已存在的第三方软件工具可以为它提供这方面的功能，就像APT为Debian所作的那样。

一些工具分析已安装的包以决定依赖关系，决定需要什么库文件，然后寻找什么包提供这些库文件。这些自动处理很费时，比起APT的手动调整方法原始的多。然而它提供了一个令人满意的解决。


Slackware 9.1在第二张CD上提供了作为补充的Swaret，但是并不默认安装它。自Slackware 10.0之后，Swaret被从发行版本中删除但作为第三方的包仍然可用。

slackpkg自Slackware 9.1开始包含在／extra中。

slapt-get并不提供依赖关系的解决。它只是提供解决依赖关系的框架，用以处理一些流行的类似APT的Slackware兼容包。一些Slackware衍生版本利用了这些功能的优点。

Slackware是很多现今不那么流行的论坛的讨论主题，例如Usenet新闻组"alt.os.linux.slackware"以及irc.freenode.net上的IRC频道"#slackware"。


