真值表

真值表是使用于逻辑中（特别是在连结逻辑代数、布林函数和命题逻辑上）的一类数学用表，用来计算逻辑表示式在每种论证（即每种逻辑变数取值的组合）上的值。尤其是，真值表可以用来判断一个命题表示式是否对所有允许的输入值皆为真，亦即是否为逻辑有效的。

「用真值表制表的推理模式是由弗雷格、查尔斯·皮尔士和恩斯特·施罗德于1880年代所发明的。这种表格于1920年代之后广泛地发现在许多文献上（扬·武卡谢维奇、埃米尔·波斯特、维特根斯坦）”（蒯因, 39）。路易斯·卡罗早在1894年就公式化了真值表来解决特定问题，但是包含他这项工作的手稿直到1977年才被发现 。维特根斯坦的《逻辑哲学论》利用真值表把真值函数置于序列中。这个著作的广泛影响导致了真值表的传播。

真值表被用来计算以「决策程序」建构的命题表示式的值。命题表示式可以是一个原子公式（命题常数、命题变数或命题函数，如"Px"或"P"("x")），或以逻辑算子（如逻辑与（formula_1）、逻辑或（formula_2）、逻辑非（formula_3））由原子公式建构出来的公式。举例来说，formula_4即是个命题表示式。

真值表中的列标题展示了 （i）命题函数与/或变量，和 （ii）建造自这些命题函数或变量和运算符的真值泛函表达式。行展示对 （i）和 （ii）的T或F指派的每个可能的求值。换句话说，每行都是对 （i）和 （ii）的不同解释。

经典（就是说二值）逻辑的真值表限定于只有两个真值是可能的布尔逻辑系统，它们是“真”或“假”，通常在表中简单的表示为T和F。

在布尔逻辑系统中，所有运算符都能以这种方式明确的定义。例如NOT（¬）关系定义如下：

例如，采用两个命题变量，formula_5和formula_6和逻辑运算符"AND"（∧），表示合取"A与B"或formula_5 ∧ formula_6。在普通英语中，如果A和B都是真的，那么合取"formula_5 ∧ formula_6"是真的；在所有的对formula_5 ∧ formula_6的真值的可能指派，合取都是假的。这种联系定义如下：

OR (∨)关系定义如下：

可以构造复合的表达式，使用圆括号来指示优先级。
合取的否定¬（formula_5 ∧ formula_6）≡ formula_5 ∧ formula_6，和否定的析取¬ formula_5 ∨ ¬ formula_6描述如下：

真值表可以用来证明逻辑等价。
析取的否定¬（formula_5 ∨ formula_6）≡ formula_5 ∨ formula_6，和否定的合取¬ formula_5 ∧ ¬ formula_6描述如下：

比较上面两个真值表，因为对formula_5 ∧ formula_6和¬ formula_5 ∨ ¬ formula_6二者，与formula_5 ∨ formula_6和¬ formula_5 ∧ ¬ formula_6二者，枚举formula_5和formula_6的所有可能真值生成相同真值，它们分别是逻辑等价的，并可相互代换。这种等价是德·摩根定律中的。

A ∧ B (还写为formula_35或formula_36)描述如下：

下面的真值表给出2个二值变量（P,Q是布尔变量）的16个可能的真值函数中最常用的7个的定义：

注解：

Johnston图，类似于文氏图和欧拉图，提供了可视化真值表的方式。LogicTutorial.com有展示真值表的交互的Johnston图。

对于二元运算符，还使用一种紧缩形式的真值表，这里的行标题和列标题指定操作元（operand）而表单元指定结果。例如布尔逻辑是这种真值表表示法：
这种表示法在运算符是交换性的时候特别有用，尽管你可以补充的指定行是第一个操作元而列是第二个操作元。这种紧缩的表示法在讨论逻辑的多值扩展时特别有用，因为组合数的爆炸性增加，它能有效的缩减所需要的行数。它还提供了在表中值的分布的快速可辩识的特征性"形状"，可以帮助读者更加快速的把握规律。



